# The Xgrow development environment need:
# - Add PHP (7.4.29); (same dev server); ✅
# - Add initial data to Mysql (8.0.29); ✅
# - ElasticSearch (7.15.1); ✅
# - Kibana (7.15.1); ✅

# #### ACESSOS ####
# - Access php with: docker exec -it xgrow /bin/bash
# - Access Plataforma: http://localhost:8000/
# - Access Admin: http://localhost:5050/
# - Access MailHog: http://localhost:8025/
# - Access phpMyAdmin: http://localhost:8080/
# - Access Elasticsearch: http://localhost:9200/
# - Access Kibana: http://localhost:5601/

version: "3.3"

services:
  xgrow-db:
    image: mysql:8.0.29
    # platform: linux/amd64
    container_name: xgrow-db
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - db_fandone:/var/lib/mysql
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: db_fandone
    networks:
      - xgrow

  # xgrow-mongo:
  #   depends_on:
  #     - xgrow-db
  #   image: mongo:4.4.10
  #   container_name: xgrow-mongo
  #   restart: always
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: 123456
  #   ports:
  #     - 27017:27017
  #   networks:
  #     - xgrow

  xgrow-redis:
    # depends_on:
      # - xgrow-mongo
    image: redis:6.2.6
    container_name: xgrow-redis
    command: redis-server --requirepass 123456
    ports:
      - 6379:6379
    networks:
      - xgrow

  # xgrow-mailhog:
  #   image: mailhog/mailhog
  #   container_name: xgrow-mailhog
  #   logging:
  #     driver: "none"
  #   ports:
  #     - 1025:1025 # smtp server
  #     - 8025:8025 # web ui
  #   networks:
  #     - xgrow

  xgrow-php:
    depends_on:
      - xgrow-db
      # - xgrow-phpmyadmin
      # - xgrow-redis
      # - xgrow-mongo
    build:
      args:
        user: xgrow
        uid: 1000
      context: ./
      dockerfile: Dockerfile.xgrowapi
    image: xgrow-php
    container_name: xgrow-php
    restart: unless-stopped
    working_dir: /var/www/html
    # command: bash -c "php artisan config:clear && php artisan serve --host=0.0.0.0 --port=8000"
    command: bash -c "composer install --ignore-platform-req=ext-mongodb && php artisan config:clear && php artisan serve --host=0.0.0.0 --port=8000"
    volumes:
      - ./xgrow:/var/www/html
    ports:
      - 82:82
      - 8000:8000
    networks:
      - xgrow

  # backoffice-php:
  #   depends_on:
  #     - xgrow-db
  #     # - xgrow-phpmyadmin
  #     # - xgrow-redis
  #     # - xgrow-mongo
  #   build:
  #     args:
  #       user: xgrow
  #       uid: 1000
  #     context: ./
  #     dockerfile: Dockerfile
  #   image: xgrow-php
  #   container_name: backoffice-php
  #   restart: unless-stopped
  #   working_dir: /var/www/html
  #   command: bash -c "composer install --ignore-platform-req=ext-mongodb && php artisan serve --host=0.0.0.0 --port=5050"
  #   volumes:
  #     - ./backoffice:/var/www/html
  #   ports:
  #     - 81:81
  #     - 5050:5050
  #   networks:
  #     - xgrow

  # reports-php:
  #   depends_on:
  #     - xgrow-db
  #     # - xgrow-phpmyadmin
  #     - xgrow-redis
  #     - xgrow-mongo
  #   build:
  #     args:
  #       user: xgrow
  #       uid: 1000
  #     context: ./
  #     dockerfile: Dockerfile
  #   image: xgrow-php
  #   container_name: reports-api
  #   restart: unless-stopped
  #   working_dir: /var/www/html
  #   command: bash -c "php artisan config:clear && php artisan serve --host=0.0.0.0 --port=9000"
  #   volumes:
  #     - ./xgrow:/var/www/html
  #   ports:
  #     - 83:83
  #     - 9000:9000
  #   networks:
  #     - xgrow

volumes:
  db_fandone: {}
  esdata:
    driver: local

networks:
  xgrow: null