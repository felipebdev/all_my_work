## Number of replicas
replicas: 6

## Image settings
image:
  name: us-east1-docker.pkg.dev/xstaging-348615/platform/xgrow
  tag: develop-latest
  pullPolicy: Always

#Migration image
migrationImage:
  name: us-east1-docker.pkg.dev/xstaging-348615/platform/backoffice_php
  tag: develop-latest
  pullPolicy: Always
  
migrationImageCommand: {}

# Se especificado, será criado um pod de inicialização
# initCommand: "php artisan key:generate --show"

## Sidecar Settings
sidecar:
  enabled: true

  image:
    name: us-east1-docker.pkg.dev/xstaging-348615/platform/xgrow_nginx
    tag: latest
    pullPolicy: Always

  command: null
  args: null

## Variáveis de Ambiente
env: {}

## Variáveis de Ambiente Protegidas
secretEnv: {}  

## Usar para adicionar arquivos arbitrários
## Serão montados no diretório /configs/, por exemplo,  myconfig.json será
## montado em /configs/myconfig.json.
configFiles: {}
  # myconfig.json: |
  #   filecontents...

## Arquivos protegidos
## Serão montados em /secrets/, por file.name would
## be mounted to /secrets/mysecret.txt.
## The contents will be base64 encoded when added
secretFiles: true
  # mysecret.txt: |
  #   filecontents...

imagePullSecrets: []
  # - secretName

## Node Selector
nodeSelector: {}
  # key: value

## Node Affinity
affinity: 
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: node_group
          operator: In
          values:
          - application
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 1
      preference:
        matchExpressions:
        - key: node_group
          operator: In
          values:
          - application

## Prefer Preemptible nodes (only on GKE)
gkePreferPreemptibleNode: false

## Don't run on preemptible nodes (only on GKE)
gkeForbidPreemptibleNode: false

## Don't run on preemptible nodes (only on GKE)
gkeForcePreemptibleNode: false

## Liveness probe
livenessProbe: {}

## Readiness probe
readinessProbe: {}

## Resources
resources: 
  limits:
   cpu: 1000m
   memory: 1280Mi
  requests:
   cpu: 100m
   memory: 128Mi


autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80  


## Labels to be added to all objects
extraLabels: {}
  # key: value

## Deployment
deployment: {}
  #strategy:
    #type: RollingUpdate
    #rollingUpdate:
    #  maxSurge: 1
    #  maxUnavailable: 0
  # labels to add to the pod container metadata
  # podLabels:
  #   key: value
  # podAnnotations:
  #   key: value

## Service
service:
  enabled: true
  type: ClusterIP
  port: 80
  targetPort: 80
  protocol: TCP

## Ingress
ingress:
  ## If ingress is enabled
  enabled: true

  ## If TLS is enabled
  tls: true

  ## Annotations
  annotations: {}

  ## Hosts
  hosts: []
    # -
    # host: app.com
    # path: /
    # port: 80

## Lsita de workers, será criado um deployment para cada item com a execução do comando especificado
workers: {}
  # worker1:
  #  image: 
  #    name: "php"
  #    tag: "7-alpine"
  #  command: "while true; do date; sleep 30; done"
  # worker2:  # usa a imagem padrão  
  #  command: "while true; do date; sleep 30; done"

cronjobs: {}
  # cron1:
  #   schedule: "* * * * *"
  #   image:
  #     name: "php"
  #     tag: "7-alpine"
  #   command: "date"
  #   concurrencyPolicy: Forbid
  #   successfulJobsHistoryLimit: 10
  #   failedJobsHistoryLimit: 100
  #   startingDeadlineSeconds: 120
  #   restartPolicy: "OnFailure"
  # cron2:
  #   schedule: "* * * * *"    
  #   command: "date"    
