version: "3.7"
services:
  tempo:
    image: grafana/tempo:1.0.1
    container_name: tempo
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./etc/tempo-local.yaml:/etc/tempo.yaml
    ports:
      - "14268"      # jaeger ingest, Jaeger - Thrift HTTP
      - "14250"      # Jaeger - GRPC
      - "55680"      # OpenTelemetry
      - "3100"       # tempo
      - "6831/udp"   # Jaeger - Thrift Compact
      - "6832/udp"   # Jaeger - Thrift Binary

  loki:
    image: grafana/loki:2.3.0
    container_name: loki
    hostname: loki
    command: -config.file=/etc/loki/loki-local.yaml
    ports:
      - "3100:3100"
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    volumes:
      - ./etc/loki-local.yaml:/etc/loki/loki-local.yaml

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./etc/prometheus.yaml:/etc/prometheus.yaml
    entrypoint:
      - /bin/prometheus
      - --config.file=/etc/prometheus.yaml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:8.1.0-ubuntu
    container_name: grafana
    volumes:
      - ./data/grafana-data/datasources:/etc/grafana/provisioning/datasources
      - ./data/grafana-data/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./data/grafana-data/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3333:3000"
    depends_on:
      - prometheus
      - tempo
      - loki
  fluentd:
    image: grafana/fluent-plugin-loki:master
    container_name: fluentd
    command:
      - "fluentd"
      - "-v"
      - "-p"
      - "/fluentd/plugins"
    environment:
      LOKI_URL: http://loki:3100
    ports:
      - 24224:24224
    expose:
      - 24224
    deploy:
      mode: global
    volumes:
      - ./etc/fluent.conf:/fluentd/etc/fluent.conf
      - /etc/machine-id:/etc/machine-id
      - /dev/log:/dev/log
      - /var/run/systemd/journal/:/var/run/systemd/journal/
  redis:
    image: redis:latest
    ports:
      - 6379:6379
  
  q-questionnaire-rules-node:
    # image: q-questionnaire-rules-node
    # image: node:16-alpine
    # working_dir: /usr/src/app
    # command: ['npm', 'run', 'start:dev']
    build:
      context: .
      dockerfile: Dockerfile
    container_name: q-questionnaire-rules-node
    expose:
      - 3000
      - 9229
      - 8081
    ports:
      - 3000:3000
      - 9229:9229
      - 8081:8081
    # volumes:
    #   - ./src:/usr/src/app/src
    #   - ./.env:/usr/src/app/.env
    environment:
      OTEL_SERVICE_NAME: q-questionnaire-rules-node
      OTEL_EXPORTER_JAEGER_ENDPOINT: http://tempo:14268/api/traces
      APP_NAME: q-questionnaire-rules-node
      APP_DESCRIPTION: Node Proposal Service
      APP_VERSION: 0.0.0
      APP_PORT: 3000
      THROTTLER_TTL: 60
      THROTTLER_LIMIT: 100
      LOGGER_PINO_HTTP_ENABLED: "true"
      LOGGER_PINO_HTTP_LEVEL: "info"
      LOGGER_PINO_HTTP_AUTO_LOGGING: "false"
      LOGGER_PINO_HTTP_QUIET_REQ_LOGGER: "true"
      LOGGER_PINO_HTTP_MIN_LENGTH: 4096
      AWS_ACCOUNT_ID: 790266467241
      AWS_ACCESS_KEY_ID: 
      AWS_SECRET_ACCESS_KEY: 
      AWS_DEFAULT_REGION: us-east-1
      AWS_COGNITO_IDENTITY_PROVIDER_ENDPOINT: https://cognito-idp.us-east-1.amazonaws.com
      AWS_COGNITO_CLIENT_ID: 7q40riojekgej2kte28oo7qcd8
      AWS_COGNITO_CLIENT_SECRET: o271dd2uc79e4oidk6cn388k2qv557jg70tm11ahjn3dr7poiuh
      AWS_COGNITO_USER_POOL_ID: us-east-1_GZw2DmM9F      
      AWS_COGNITO_USER_POOL_URL: https://cognito-idp.us-east-1.amazonaws.com/us-east-1_GZw2DmM9F
      AWS_COGNITO_USER_POOL_JWKS_URL: https://cognito-idp.us-east-1.amazonaws.com/us-east-1_GZw2DmM9F/.well-known/jwks.json
      CACHE_STORE: redis
      CACHE_HOST: redis
      CACHE_PORT: 6379
      CACHE_TTL: 600
      CACHE_PREFIX: q-questionnaire-rules-node
      CACHE_PASSWORD: q-questionnaire-rules-node
    logging:
      driver: "fluentd"
      options:
        fluentd-address: tcp://host.docker.internal:24224
        tag: loki
